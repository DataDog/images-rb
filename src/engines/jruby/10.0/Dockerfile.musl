FROM eclipse-temurin:22-jdk-alpine AS jruby-10.0.0.1-jre22

# A few RUN actions in Dockerfiles are subject to uncontrollable outside
# variability: an identical command would be the same from `docker build`'s
# point of view but does not indicate the result would be identical at
# different points in time.
#
# This causes two possible issues:
#
# - one wants to capture a new state and so wants the identical
#   non-reproducible command to produce a new result. This could be achieved
#   with --no-cache but this affects every single operation in a Dockerfile
# - one wants to identify a specific state and leverage caching at that
#   specific state.
#
# To that end a BUILD_ARG is introduced to capture an arbitrary identifier of
# that state (typically time) that is introduced in non-reproducible commands
# to make them appear different to Docker.
#
# Of course it only works when caching data is available: two independent
# builds with the same value and no cache shared would produce different
# results.
ARG REPRO_RUN_KEY=0

# `apk update` is uncontrolled and fetches whatever is today's index.
# For the sake of reproducibility subsequent steps (including in dependent
# images) should not do `apk update`, instead this base image should be
# updated by changing the `REPRO_RUN_KEY`.
RUN true "${REPRO_RUN_KEY}" && apk update

# Add a few packages for consistency
RUN apk add curl bash

# Install JRuby, pinned for reproducibility
ENV JRUBY_VERSION 10.0.2.0
ENV JRUBY_SHA256 b8a026f38aa98461a04ed0aa0b20891ce257ecbe53e124719ce9ee5b804525f1
RUN mkdir /opt/jruby \
    && curl -fSL https://repo1.maven.org/maven2/org/jruby/jruby-dist/${JRUBY_VERSION}/jruby-dist-${JRUBY_VERSION}-bin.tar.gz -o /tmp/jruby.tar.gz \
    && echo "$JRUBY_SHA256 /tmp/jruby.tar.gz" | sha256sum -c - \
    && tar -zx --strip-components=1 -f /tmp/jruby.tar.gz -C /opt/jruby \
    && rm /tmp/jruby.tar.gz \
    && ln -sf /opt/jruby/bin/jruby /usr/local/bin/ruby
ENV PATH /opt/jruby/bin:$PATH

# Skip installing gem documentation
RUN mkdir -p /opt/jruby/etc \
    && echo -e 'install: --no-document\nupdate: --no-document' >> /opt/jruby/etc/gemrc

## Install a pinned RubyGems and Bundler
RUN gem update --system 3.7.2
RUN gem install bundler:2.7.2

# Install additional gems that are in CRuby but missing from the above
# JRuby install distribution. These are version-pinned for reproducibility.
RUN gem install rake:13.2.1

# Start IRB as a default
CMD [ "irb" ]
